{"cells":[{"cell_type":"markdown","metadata":{"id":"CdlQ89yOHM10"},"source":["## Omar Khaiom\n","## *2230594*\n","\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"9WTgbG1z2Ysb"},"source":["###                     Class:01\n","            \n","              print and index printing\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"E-e3wMxy23N0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669391056299,"user_tz":-360,"elapsed":6,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"e96eb18d-1177-4997-efee-f31c3e7a0e82"},"outputs":[{"output_type":"stream","name":"stdout","text":["hello world\n","e\n","hello w\n","hlow\n","15\n"]}],"source":["x = \"hello world\"\n","print(x)\n","\n","print(x[1]) #index\n","print(x[0:7])  \n","print(x[0:7:2])\n","\n","#len printing\n","\n","y = \"My name is Omar\"\n","print(len(y))"]},{"cell_type":"markdown","metadata":{"id":"Ducl2r4r3C8O"},"source":["#                         class:02\n","       input function,find,replace method\n","       upper , lower, title, strip, find  new line and space ,\n","          "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"calb95te3rP_"},"outputs":[],"source":["#string\n","x = input(\"What is your first name :\")\n","y = input(\"What is your second name :\")\n","print(x, y)\n","\n","\n","x = input(\"What is your first name :\")\n","y = input(\"What is your second name :\")\n","print(x, \"-\", y)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pal0A6ov4ArG"},"outputs":[],"source":["#integer\n","item_1 = int(input(\"cost of item-1 : \"))\n","item_2 = int(input(\"cost of item-2 : \"))\n","print(item_1+item_2)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3hdA1nG44H7y"},"outputs":[],"source":["#quest = supose x = 10 and y = 20...You have to print x = 20 and y = 10\n","\n","a = 10\n","b = 20\n","c = a     # empty variable is taken to exchange values\n","a = b\n","b = c\n","print(a)\n","print(c)\n","\n","#or\n","\n","a,c == c,a\n","print(a)\n","print(c)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iVVdpr3r4gzF"},"outputs":[],"source":["# upper , lower, title, strip, find,replace method\n","\n","a = \"helLo class\"\n","print(a.upper())\n","print(a.lower())\n","print(a.title())\n","print(a.strip())  #its prints the same \n","print(\"b\" in a)   #true false ans\n","print(a.replace(\"b\",\"c\"))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"i6dtY_-q4nX_"},"outputs":[],"source":["# new line and space \n","\n","a = \"omar\"\n","b = \"khaiom\"\n","\n","print(a, end=\"-\")\n","print(b)\n","\n","print(a, end=\"\\t\")   #tab space\n","print(b)\n","\n","print(a, end=\"\\n\")   #new line\n","print(b)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"61DWXSwG453J"},"outputs":[],"source":["#printing double\\tripple or many times\n","\n","name = \"omar\"\n","print(name*2)   #here we can use 2 or 3 or how many times we want \n","print(name*3)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NGbjKdO15C1R"},"outputs":[],"source":["#quest = print a pyramid with print function\n","\n","print(\"      *\")\n","print(\"     ***\")\n","print(\"    *****\")\n","print(\"   *******\")\n","print(\"  *********\")\n"]},{"cell_type":"markdown","metadata":{"id":"PqDorIHd6o9S"},"source":["\n","                      while loop basic and break\n","           "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZLilmotz7G6c"},"outputs":[],"source":["x = \"hello\"\n","\n","if \"he\" in x:\n","    print(\"can find it\")\n","else:\n","    print(\"cant find\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7sOKZtTkdQmp"},"outputs":[],"source":["x = \"hello\"\n","y = \"hex\" in x\n","\n","if y:\n","    print(\"can found it\")\n","else:\n","    print(\"cant find it\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"O3HDSW2AdVhW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669393037797,"user_tz":-360,"elapsed":6220,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"78b75846-890d-4879-abff-55d710a1f664"},"outputs":[{"output_type":"stream","name":"stdout","text":["Enter your age :18\n","teen\n"]}],"source":["#quest : take a user input and print in what he or she is\n","#Infrant = 0-1 year\n","#Toddler = 2-4 year\n","#Child = 5-12 years\n","#Teen = 13-19 years\n","#Adult = 20-39 years\n","#Middle age adult = 40-59 years\n","#Senior adult = 60+\n","\n","age = int(input(\"Enter your age :\"))\n","\n","if 0<=age<2:\n","    print(\" infrant\")\n","elif 2<=age<5:\n","    print(\" toddler\")\n","elif 5<=age<13:\n","    print(\" child\")\n","elif 13<=age<20:\n","    print(\"teen\")\n","elif 20<=age<40:\n","    print(\"adult\")\n","elif 40<=age<60:\n","    print(\"middle adult\")\n","else:\n","    print(\"You are senior adult\")\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZUSB_KNfdW3x"},"outputs":[],"source":["#asking frined to guess a number 3 times\n","\n","secret_number = 9\n","guess_1 = int(input(\"GUESS FIRST TIME :\"))\n","if guess_1 == secret_number:\n","  print(\"WON IN FIRST TIME\")\n","elif guess_1 != secret_number:\n","  guess_2 = int(input(\"GUESS SECOND TIME :\")) \n","  if guess_2 == secret_number:\n","    print(\"WON IN SECOND TRIAL\")\n","  elif guess_2 != secret_number:\n","    guess_3 = int(input(\"GUESS THIRD TIME :\"))\n","    if guess_3 == secret_number:\n","      print(\"WON IN THIRD TIME\")\n","    else:\n","      print(\"WRONG\")\n","      \n","\n","    \n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"mvqy_Y9QeQOD"},"source":["                 while lopp and basic\n","                         and \n","                  counter and break"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"GTBofnIaeTst","outputId":"2596e4fe-93d7-414e-c6b5-939b28d3413c"},"outputs":[{"name":"stdout","output_type":"stream","text":["You are teen\n"]}],"source":["while True:\n","  \n","  age = int(input(\"Enter your age :\"))\n","\n","  if 0<=age<2:\n","      print(\"You are infrant\")\n","  elif 2<=age<5:\n","      print(\"You are toddler\")\n","  elif 5<=age<13:\n","      print(\"You are child\")\n","  elif 13<=age<20:\n","      print(\"You are teen\")\n","  elif 20<=age<40:\n","      print(\"You are adult\")\n","  elif 40<=age<60:\n","      print(\"You are middle age adult\")\n","  else:\n","      print(\"You are senior adult\")\n","      \n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"c9-WopGG3IEd"},"outputs":[],"source":["#printing 1-10 by while loop\n","\n","i = 1\n","while i <= 10:\n","    print(i)\n","    i = i + 1\n","    "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ULKkHI1E4Duy"},"outputs":[],"source":["#print first 10 even numbers\n","\n","i = 0\n","while i <= 10:\n","  if i%2 == 0:\n","    print(i)\n","  i = i + 1"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"J51Nhez25alC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669393037826,"user_tz":-360,"elapsed":0,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"92afed70-01a8-4458-c429-409ac4443fd1"},"outputs":[{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["1\n","3\n","5\n","7\n","9\n"]}],"source":["#print first 10 odd numbers\n","\n","i = 0\n","while i <= 10:\n","  if i%2 != 0:\n","    print(i)\n","  i = i + 1"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UYinvMM_5wxm"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"w7bknCI7jBos"},"outputs":[],"source":["#find if a number is plaindrome or not                 #888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888\n","number = int(input(\"Enter the number :\"))\n","#12345\n","i = 0\n","z = -1\n","\n","while i==z:\n","  if number[i] != number[-z]:\n","    print(\"The number is not plaindrome\")\n","  i = i + 1\n","  z = z - 1\n","else:\n","  print(\"The number is plaindrome\")\n","    \n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ipBzPvHGc-ic"},"outputs":[],"source":["#find the len on digit\n","num = 56244\n","i = 0\n","while num != 0:\n","  num = num//10\n","  i = i + 1\n","print(i)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dCYPsHNZfFPD"},"outputs":[],"source":["counter = 0\n","\n","while True:\n","  counter += 1\n","\n","  age = int(input(\"Enter the age :\"))\n","  if 0<=age<11:\n","    print(\"you are not elligible\")\n","  elif 11<=age<18:\n","    print(\"you are elligible\")\n","  else:\n","    print(\"you are not elligible\")\n","\n","  if counter >= 5:\n","    print(\"thankS)\n","    break\n","\n"]},{"cell_type":"markdown","metadata":{"id":"aQeeSbS2gnOZ"},"source":["# 14 july\n","1st dimension list"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"t3InmvYhggJr"},"outputs":[],"source":["#index of list\n","my_list = [3,7,\"OMAR\",6.9]\n","\n","print(my_list[0])\n","print(my_list[1])\n","print(my_list[2])\n","print(my_list[3])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D1r8RnZ4iImS"},"outputs":[],"source":["#nested list\n","\n","my_list = [2.4, 3, [\"OMAR\", 1230671, 7.53]]\n","\n","print(my_list[2][2])\n","print(my_list[0:3])   \n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6kf3N3OpjP3B"},"outputs":[],"source":["#updating value from list\n","THIS_list = [ 2, 9, 10, 50]\n","\n","THIS_list[0] = 4\n","print(THIS_list)\n","\n","THIS_list[1:4] = [ 12, 56, 7]\n","print(THIS_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"btynjsyJjEqI"},"outputs":[],"source":["#Take id from student and print the cgpa\n","\n","id = [ 1, 2, 3, 4]\n","cgpa = [ 2.5, 4.00, 3.5, 3.1]\n","\n","student_id = int(input(\"Enter your student id :\"))\n","index = id.index(student_id)\n","\n","print(\"Your cgpa is {}\".format(cgpa[index]))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f-R5IrlD55Fd"},"outputs":[],"source":["#print all positive numbers from a list\n","\n","my_list = [1,3,3,4,-1,9,-5,6]\n","i = 0\n","\n","while i < len(my_list):\n","  if my_list[i] >= 0:\n","    print(my_list[i])\n","  i = i + 1"]},{"cell_type":"markdown","metadata":{"id":"t5Pds9pRdxld"},"source":["                    "]},{"cell_type":"markdown","metadata":{"id":"at0B-SEpmtW8"},"source":[" 26 june\n","##     26 june    "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hzT9kSx11EYF"},"outputs":[],"source":["def greet(name):\n","  print(\"Hello\",name)\n","\n","greet(\"omar\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UngWjhMJ4_9Z"},"outputs":[],"source":["#take the height from input and print which team they can enter\n","#160 or up = basket ball\n","#140 - 159 = football\n","#less tha 140 = gymnastic\n","\n","def team(height):\n","  if height>=160:\n","    return \"basketball\"\n","  elif 140<=height<159:\n","    return \"football\"\n","  elif height<140:\n","    return \"gymnastic\"\n","\n","player_height = int(input(\"What is your height in cm =\"))\n","result = team(player_height)\n","print(\"You can enter in\", result )"]},{"cell_type":"markdown","metadata":{"id":"DshW0w62KmjP"},"source":["                  for loop\n","                  "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ObZGIjSZ_3EO"},"outputs":[],"source":["x=[8,7,7,5,4]\n","\n","for value in x :\n","\n","    print(value)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PFGbROsl_KPR"},"outputs":[],"source":["x=[9,2,3,5,7]\n","sum=0\n","\n","for elem in x :\n","    sum += elem\n","\n","print(sum)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DiLBROO-EF3u"},"outputs":[],"source":["names=[\"a\",\"b\",\"c\",\"d\",\"e\"]\n","marks=[5,7,3,4,8]\n","\n","tot = 0\n","for x in marks :\n","  tot+=x\n","\n","print(tot)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D-S66flCppkZ"},"outputs":[],"source":["names=[\"a\",\"b\",\"c\",\"d\",\"e\"]\n","marks=[5,7,3,4,8]\n","\n","tot = 0\n","for x in marks :\n","  tot+=x\n","\n","print(tot/len(marks))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TUGUf5AAqEYy"},"outputs":[],"source":["name=['aa','bb','cc','dd','ee']\n","marks=[5,7,3,4,8]\n","\n","i=0\n","for n in name:\n","    i += 1\n","    if n == 'cc':\n","        print(n)\n","        break\n","\n","print(i)        \n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Qtmk91g9sTFe"},"outputs":[],"source":["names=['aa','bb','cc','dd','ee']\n","marks=[5,7,3,4,8]\n","\n","i=0\n","for n in names:\n","    i += 1\n","    if n == 'cc':\n","        print(n)\n","        break\n","\n","print(marks[i-1])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Cei6aR_HtDR4"},"outputs":[],"source":["names=['aa','bb','cc','dd','ee']\n","marks=[53,75,32,41,89]\n","\n","for i, n in enumerate(names):\n","    print(i,n)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vMBrD0G0tfXZ"},"outputs":[],"source":["names=['aa','bb','cc','dd','ee']\n","marks=[53,75,32,41,89]\n","\n","for i, n in enumerate(names):\n","    if n == 'cc':\n","        print(i,n,marks[i])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A-eC60lhuKuu"},"outputs":[],"source":["names=['aa','bb','cc','dd','ee']\n","marks=[53,75,32,41,89]\n","\n","for n,m in zip(names,marks):\n","      print(n,m)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ADxCcj6hMqfr"},"outputs":[],"source":["#factorial by for loop\n","number = int(input(\"ENTER THE NUMBER :\"))\n","factorial = 1\n","#4*3*2*1\n","for i in range(1,number+1):\n","  factorial = factorial * i\n","print(\"The factorial of the ,\",number, \"is \",factorial,)"]},{"cell_type":"markdown","metadata":{"id":"OyRqi7WF3TXB"},"source":["# **                    ** class\n","# date: 3 july\n","import function\n","\n","\n","                    \n","                  "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KpROvw9j3vbI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669393061960,"user_tz":-360,"elapsed":785,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"91d3864e-e649-4d99-a903-037c5f063eaf"},"outputs":[{"output_type":"stream","name":"stdout","text":["2022-11-25 16:17:50.484850\n","Year : 2022\n","Month : 11\n","Day : 25\n","Hour : 16\n","Minute : 17\n","Second : 50\n","Microsecond : 484850\n","Full : 25-11-22 16:17\n"]}],"source":["from datetime import datetime\n","\n","now = datetime.now()\n","\n","print(now)\n","print(\"Year :\", now.year)\n","print(\"Month :\", now.month)\n","print(\"Day :\", now.day)\n","print(\"Hour :\", now.hour)\n","print(\"Minute :\", now.minute)\n","print(\"Second :\", now.second)\n","print(\"Microsecond :\", now.microsecond)\n","\n","print(\"Full :\",now.strftime(\"%d-%m-%y %H:%M\"))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZpNJjaHa54uY"},"outputs":[],"source":[" #index\n","\n","a = [\n","        [1,2,3],\n","        [4,5,6],\n","        [7,8,9]\n","    ]\n","\n","print(a[0])\n","print(a[1])\n","print(a[2])\n","\n","print(a[0][2])\n","print(a[1][1])\n","\n","      "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CCRjSQ7CKGM8"},"outputs":[],"source":["list_1 = [\n","           [0,1,2,3],\n","           [4,5,6,7],\n","           [8,9,0,1],\n","           [1,2,3,4]\n","         ]\n","\n","for i in list_1:\n","  print(i)\n","\n","for i in range(len(list_1)):\n","  for j in range(len(list_1[i])):\n","    print(list_1[i][j],end=\" \")\n","  print(\"\")\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gHqtgk6OIu2t"},"outputs":[],"source":["#printing column wise\n","list_1 = [\n","           [0,1,2,3],\n","           [4,5,6,7],\n","           [8,9,0,1],\n","           [1,2,3,4]\n","         ]\n","\n","for i in range(4):\n","  for j in range(4):\n","    print(list_1[i][j])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lbOrWjrJV0GX"},"outputs":[],"source":["#Ivalue as integer in a empty list from a string using loop:  \n","l=[]\n","s=\"5543354\"\n","for i in (s): \n","  l.append(int(i))\n","print(l)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MUKb3BVD6sSv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669393198330,"user_tz":-360,"elapsed":554,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"4b57e5b6-04c8-4dad-c143-caa9c9475c46"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[1, 2.3, 'omar'], [3, 3.2, 'rahat'], [2, 2.9, 'rahat omar'], [4, 2.8, 'atif']]\n","[[1, 2.3, 'omar'], [3, 3.2, 'rahat'], [2, 2.9, 'rahat omar']]\n","[[1, 2.3, 'omar'], [3, 3.2, 'rahat'], [2, 2.9, 'rahat omar'], [5, 2.4, 'oamr atif']]\n"]}],"source":["#insert...pop...append\n","\n","list_of_data = [\n","                  [1, 2.3, \"omar\"],\n","                  [3, 3.2, \"rahat\"],\n","                  [4, 2.8, \"atif\"]\n","               ]\n","\n","list_of_data.insert(2,[2, 2.9, \"rahat omar\"])\n","print(list_of_data)\n","\n","list_of_data.pop(3)\n","print(list_of_data) \n","\n","list_of_data.append([5, 2.4, \"oamr atif\"])\n","print(list_of_data)\n","\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-bo0IBVsV6d-"},"outputs":[],"source":["l=[]\n","s=\"128433\"\n","l=list(s)\n","print(l)\n","\n","x=[\"even\" if y%2==0 else \"odd\" for y in range(30) ]# list comprehension.\n","print(x)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZjI8bp_hWSRB"},"outputs":[],"source":["#Findind even number by using list comprehension:\n","x=[y for y in range(30)  if y%2==0 ]\n","print(x)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"z6AkCTWeWWeS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669393190603,"user_tz":-360,"elapsed":761,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"78b510b3-aa47-49c8-ee18-a00cd0f08633"},"outputs":[{"output_type":"stream","name":"stdout","text":["[5, 5, 6]\n"]}],"source":["#Finding  the length of the words in the string line by list comprehension:\n","s=\"hello world looser\"\n","w=s.split(\" \")  #\"variable.split(\" \")\" is used for differentiating the word by space.\n","l=[len(n)  for n in w]\n","print(l)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mz8Qd_LRQQ0s"},"outputs":[],"source":["my_tuple = (1,3,4,5)\n","print(my_tuple)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kaYJBJ2vQZC5"},"outputs":[],"source":["my_tuple = ()\n","print(my_tuple)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LruD0rhiQtjE"},"outputs":[],"source":["my_tuple = (\"apple\",[8,9,5,6],(2,5,6))\n","print(my_tuple)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xn3UwN_wQjrP"},"outputs":[],"source":["my_tuple = (1,\"omar\",3)\n","print(my_tuple)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uJ9qlhnxb8Wb"},"outputs":[],"source":["x = (9,2,[3,6,8])\n","x[2][0] = 7\n","print(x)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tqu6DidRQ99w"},"outputs":[],"source":["my_tuple = (1,2,95,11,3)\n","print(my_tuple[-1])\n","print(my_tuple[-2])\n","print(my_tuple[-3])\n","print(my_tuple[-4])\n","print(my_tuple[-5])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ADHWyrGscbAp"},"outputs":[],"source":["x = (45,)\n","print(x)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eLmfn0udcOuy"},"outputs":[],"source":["x = (9,2,[3,6,8])\n","y = x\n","\n","x = (1,2,3)\n","\n","print(x)\n","print(y)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Amu8afGUcznh"},"outputs":[],"source":["my_tuple = (3,2,1,4)\n","\n","print(3 in my_tuple)\n","print(5 in my_tuple)\n","\n","if 3 in my_tuple:\n","  print(\"yes\")\n","else:\n","  print(\"no\")\n","\n","if 7 in my_tuple:\n","  print(\"yes\")\n","else:\n","  print(\"no\")\n","  \n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kWqsz4ohcim6"},"outputs":[],"source":["my_tuple = (3,5,8,9)\n","a,b,c,d = my_tuple\n","print(a)\n","print(b)\n","print(c)\n","print(d)"]},{"cell_type":"markdown","metadata":{"id":"093VDutM2RjC"},"source":["#  SET\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9b6s5JHTOlUm"},"outputs":[],"source":["#set must have {} \n","my_set = {1, 2, 3}\n","print(my_set)\n","\n","\n","my_set = {1.0, \"Hello\", (1, 2, 3)}\n","print(my_set)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6wsBxcaoQHKM"},"outputs":[],"source":["# set cant have duplicate numbers\n","my_set = {1, 2, 3, 4, 3, 2}\n","print(my_set)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eNVvcs3TQRck"},"outputs":[],"source":["# we can make set from a list\n","my_list = [1, 2, 3, 2]\n","my_set = set(my_list)\n","print(my_set)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YBFIcurNQqw3"},"outputs":[],"source":["#adding elements\n","my_set = {1,3}\n","my_set.add(2)\n","print(my_set)\n","\n","my_set.add(3)\n","print(my_set)\n","\n","my_set.add(4)\n","print(my_set)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sWipv-rnR50d"},"outputs":[],"source":["#discard or remove elements\n","\n","my_set = {1, 3, 4, 5, 6}\n","print(my_set)\n","\n","my_set.discard(3)  # we have to pust the element not the index\n","print(my_set)\n","\n","my_set.remove(4)\n","print(my_set)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"N6i9PsXOS_Ji"},"outputs":[],"source":["#union of set\n","\n","A = {1, 2, 3, 4, 5}\n","B = {4, 5, 6, 7, 8}\n","\n","print(A | B)\n","\n","#or\n","\n","A.union(B)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RfovjroQRwtr"},"outputs":[],"source":["#updating multiple elements in set\n","my_set = {1,2,3}\n","my_set.update([4, 5, 2])\n","print(my_set)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jGjS8eQYTHpS"},"outputs":[],"source":["# Intersection of sets\n","A = {1, 2, 3, 4, 5}\n","B = {4, 5, 6, 7, 8}\n","\n","print(A & B)\n","\n","#or\n","\n","A.intersection(B)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FFmFF4FeUjHb"},"outputs":[],"source":["# Symmetric difference of two sets (deleting common  )\n","\n","A = {1, 2, 3, 4, 5}\n","B = {4, 5, 6, 7, 8}\n","\n","print(A ^ B)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rIGRGuyKT8w6"},"outputs":[],"source":["# Difference of two sets\n","\n","a = {1, 2, 3, 4, 5}\n","b = {4, 5, 6, 7, 8}\n","\n","print(a - b)\n","print(b - a)"]}],"metadata":{"colab":{"provenance":[{"file_id":"1qAzEf076pb04PiD5hnxjOxEro6yrw2fe","timestamp":1669822051024}],"authorship_tag":"ABX9TyN2cj7KtFKFp6/7XcEiCl8U"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}