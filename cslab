{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOK3c4EN9rXtCikWqC9KGHg"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C-23Y2MIsgc0","executionInfo":{"status":"ok","timestamp":1676996425690,"user_tz":-360,"elapsed":409,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"3a8d4e3a-4ed4-4d64-ebbb-c02b0c364b77"},"outputs":[{"output_type":"stream","name":"stdout","text":["*\n","**\n","***\n","****\n","*****\n"]}],"source":["# Write a function that takes a number and a character (as parameters) and prints a triangle of that size using the specified character.\n","\n","def print_triangle(size, char):\n","    for i in range(1, size+1):\n","        print(char * i)\n","\n","print_triangle(5, '*')"]},{"cell_type":"code","source":["#Write a function that takes the radius of a sphere as a parameter and returns its volume.\n","\n","def sp(radius):\n","    v = (4/3) * 3.14159 * (radius ** 3)\n","    return v\n","radius = 3.5\n","v = sp(radius)\n","print(\"The volume of a sphere with radius\", radius, \"is\", v)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I05V6FLnwBoY","executionInfo":{"status":"ok","timestamp":1676996404717,"user_tz":-360,"elapsed":361,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"8a27be81-7ce6-4551-c2f9-363774241779"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["The volume of a sphere with radius 3.5 is 179.59422833333332\n"]}]},{"cell_type":"code","source":["#Write a function that takes a number as parameter and returns the factorial.\n","\n","def factorial(n):\n","    result = 1\n","    for i in range(1, n+1):\n","        result *= i\n","    return result\n","n = 7\n","fact = factorial(n)\n","print(\"The factorial of\", n, \"is\", fact)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ak_qXQoZwmUI","executionInfo":{"status":"ok","timestamp":1676996345766,"user_tz":-360,"elapsed":2,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"74a7575a-5ddb-45aa-866a-bc050289520c"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["The factorial of 7 is 5040\n"]}]},{"cell_type":"code","source":["#Write a function that takes the radius of a sphere as a parameter and returns its volume.\n","\n","def sp(radius):\n","    v = (4/3) * 3.14159 * (radius ** 3)\n","    return v\n","radius = 3.5\n","v = sp(radius)\n","print(\"The volume of a sphere with radius\", radius, \"is\", v)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JGWYiecyxarH","executionInfo":{"status":"ok","timestamp":1676996503648,"user_tz":-360,"elapsed":1085,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"8e604d92-ae81-4547-b810-113072d485e6"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["The number of digits in 65289 is 5\n"]}]},{"cell_type":"code","source":["#Write a function that takes an integer as parameter and returns the sum of digits.\n","def sum_digits(n):\n","    sum = 0\n","    while n > 0:\n","        sum += n % 10\n","        n //= 10\n","    return sum\n","n = 654247\n","digit_sum = sum_digits(n)\n","print(\"The sum of digits in\", n, \"is\", digit_sum)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aWnRO0awxfyV","executionInfo":{"status":"ok","timestamp":1676996515964,"user_tz":-360,"elapsed":2,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"84218c18-162d-47a5-898e-e5257cdb56fb"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["The sum of digits in 654247 is 28\n"]}]},{"cell_type":"code","source":["#Write a function that takes an integer as parameter and returns the reverse number.\n","def reverse_number(n):\n","    rev = 0\n","    while n > 0:\n","        rev = (rev * 10) + (n % 10)\n","        n //= 10\n","    return rev\n","n = 96523\n","rev_num = reverse_number(n)\n","print(\"The reverse of\", n, \"is\", rev_num)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kypIV3c6yCcD","executionInfo":{"status":"ok","timestamp":1676996569662,"user_tz":-360,"elapsed":583,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"f94ea216-35a0-4f86-eba5-203ad527de62"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["The reverse of 96523 is 32569\n"]}]},{"cell_type":"code","source":["#Write a function that takes two numbers as parameters and returns their HCF.\n","def find_hcf(n1, n2):\n","    if n1 == 0:\n","        return n2\n","    while n2 != 0:\n","        if n1 > n2:\n","            n1 = n1 - n2\n","        else:\n","            n2 = n2 - n1\n","    return n1\n","n1 = 12\n","n2 = 15\n","hcf = find_hcf(n1, n2)\n","print(\"The HCF of\", n1, \"and\", n2, \"is\", hcf)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_nG-rT29yRkO","executionInfo":{"status":"ok","timestamp":1676997044847,"user_tz":-360,"elapsed":4,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"898a5a4e-08c5-4a1b-ea3d-90371f40323d"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["The HCF of 12 and 15 is 3\n"]}]},{"cell_type":"code","source":["#. Write a function that takes two numbers as parameters and returns their LCM\n","def find_lcm(n1, n2):\n","    max_num = max(n1, n2)\n","    lcm = max_num\n","    while True:\n","        if lcm % n1 == 0 and lcm % n2 == 0:\n","            break\n","        lcm += max_num\n","    return lcm\n","n1 = 12\n","n2 = 18\n","lcm = find_lcm(n1, n2)\n","print(\"The LCM of\", n1, \"and\", n2, \"is\", lcm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JDMRirmx0DZp","executionInfo":{"status":"ok","timestamp":1676997126920,"user_tz":-360,"elapsed":1081,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"ad9dde5f-639a-472d-f193-c7ec3deee9a0"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["The LCM of 12 and 18 is 36\n"]}]},{"cell_type":"code","source":["#Write a function that checks if a number is prime or not. If the number is prime the function returns true, otherwise false. Also tryfunctions for checking perfect numbers and palindromes.\n","\n","def prime(num):\n","  if num>1:\n","   for i in range(2,num):\n","    if num%i==0:\n","      prime=False\n","      break\n","    else:\n","        prime=True\n","  return prime\n","num=int(input(\"enter a num:\"))\n","print(prime(num))\n","def perfect(num):\n","    per=0\n","    for i in range(1,num):\n","      if num%i==0:\n","        per=per+i\n","    if per==num:\n","      perfect=True\n","    else:\n","      perfect=False\n","    return perfect\n","num=int(input(\"enter a num:\"))\n","print(perfect(num))\n","def palindrom(num):\n","    if(str(num)[::-1] == str(num)):\n","      palindrom=True\n","    else:\n","      palindrom=False\n","    return palindrom\n","num=int(input(\"enter a num:\"))\n","print(palindrom(num))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dU3ygqPn0XPY","executionInfo":{"status":"ok","timestamp":1676999104188,"user_tz":-360,"elapsed":8668,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"ee30a900-4e2f-4611-d83d-8812c65941e9"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["enter a num:35\n","False\n","enter a num:45\n","False\n","enter a num:55\n","True\n"]}]},{"cell_type":"code","source":["#Write a function that sorts an array of numbers. In the main function, first create and print the unsorted array, then use the function to sortthe array, then print the sorted array.\n","\n","def sort_array(num):\n","    for i in range(len(num)):\n","        for j in range(i + 1, len(num)):\n","            if num[j] < num[i]:\n","                num[i], num[j] = num[j], num[i]\n","    return num\n","\n","num =[1,4,3,5,4,6,8,7]\n","print(\"Unsorted array:\", num)\n","num = sort_array(num)\n","print(\"Sorted array:\", num)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AzWevkIt-JBd","executionInfo":{"status":"ok","timestamp":1677000020310,"user_tz":-360,"elapsed":2,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"e93139f7-4565-41a5-cb8c-68c92874db27"},"execution_count":74,"outputs":[{"output_type":"stream","name":"stdout","text":["Unsorted array: [1, 4, 3, 5, 4, 6, 8, 7]\n","Sorted array: [1, 3, 4, 4, 5, 6, 7, 8]\n"]}]},{"cell_type":"code","source":["#Write a function that sorts an array of numbers. In the main function, first create and print the unsorted array, then use the function to sort the array, then print the sorted array.\n","value=[]\n","for i in range(5):\n","  a=int(input(\"Enter {0} value: \".format(i+1)))\n","  value.append(a)\n","min_val, max_val, avg_val = array_stats(arrange)\n","print(\"sum:\",sum(value))\n","print(\"average:\",sum(value)/len(value))\n","print(\"min:\",min(value))\n","print(\"max:\",max(value))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e2RtR46y_hfQ","executionInfo":{"status":"ok","timestamp":1677000296168,"user_tz":-360,"elapsed":8621,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"704b35a8-66ac-454d-b569-c7be63fa22e0"},"execution_count":81,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter 1 value: 5\n","Enter 2 value: 2\n","Enter 3 value: 4\n","Enter 4 value: 5\n","Enter 5 value: 3\n","sum: 19\n","average: 3.8\n","min: 2\n","max: 5\n"]}]},{"cell_type":"code","source":["#Write a function that takes a string as parameter and returns the number of words in that string\n","def num_of_words(string):\n","  if string.strip()==\" \":\n","    return 0\n","  words=string.split()\n","  return len(words)\n","string=str(input('enter: '))\n","print(num_of_words(string))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YqsNgtqqAdU3","executionInfo":{"status":"ok","timestamp":1677000773022,"user_tz":-360,"elapsed":10143,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"77effbef-753a-483d-eb11-d39a07c51f15"},"execution_count":96,"outputs":[{"output_type":"stream","name":"stdout","text":["enter: class\n","1\n"]}]},{"cell_type":"code","source":["#Write a function that takes a string as a parameter, changes all the letters to uppercase letters and returns the updated string.\n","\n","def uppercase(letters):\n","  updated=letters.upper()\n","  return updated\n","letters=str(input(\"Enter: \"))\n","print(uppercase(letters))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TBkxl95UA0GY","executionInfo":{"status":"ok","timestamp":1677000752383,"user_tz":-360,"elapsed":8068,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"fc79b9ce-e569-4f35-de5d-e943b9a19f00"},"execution_count":95,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter: letter\n","LETTER\n"]}]},{"cell_type":"code","source":["#Write a function that takes an IUB student ID as a string parameter, then checks if the ID is valid. If the ID is valid the function returns true,otherwise it retums false.\n","def student_ID(student_id):\n","    if len(student_id) != 35869:\n","        return False\n","    if not student_id.isdigit():\n","        return False\n","    return True\n","student_id=str(input(\"Enter a id: \"))\n","print(student_ID(student_id))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hJE6Lj_RChyU","executionInfo":{"status":"ok","timestamp":1677001604273,"user_tz":-360,"elapsed":3889,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"4cb99da4-ba63-4e2b-f116-5fa29c00aec8"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a id: 65\n","False\n"]}]},{"cell_type":"code","source":["#Write a function that returns the answer to life the universe and Everything.\n","def str():\n","  answer =\"The answer to life the universe and everything\"\n","  return answer\n","print(str())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d4lzghFZCzpZ","executionInfo":{"status":"ok","timestamp":1677001114253,"user_tz":-360,"elapsed":416,"user":{"displayName":"Omar Khaiom","userId":"00167213879092111590"}},"outputId":"85c8c17a-5418-4d60-e359-cf2357e0d3d9"},"execution_count":104,"outputs":[{"output_type":"stream","name":"stdout","text":["The answer to life the universe and everything\n"]}]}]}